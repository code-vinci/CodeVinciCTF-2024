from Crypto.Util.number import bytes_to_long, long_to_bytes, getPrime
from Crypto.Util.Padding import pad
from Crypto.Cipher import DES
from string import ascii_letters, digits
from random import randint
from sympy import root


FLAG = "5fc5e8e03d6120319217100ad2df08ff5528705687a32d30c4f71383987977916819567c6b8ba840"
KEY = "0f2c3c2a3532c03b0908d2a6673e9e33c4f5b3d1ad24a7a682137f17fb229b3252cf86e6a4bc1a14085199c55c8b4224d6d19842cc4000"
e = 7


def decryptFlag(key, encrypted_Flag):
    key = long_to_bytes(bytes_to_long(str(key).encode())).hex()
    key = bytes.fromhex(key)
    iv = key[::-1]
    helper = DES.new(key=key, mode=DES.MODE_CBC,iv=iv)
    p = helper.decrypt(bytes.fromhex(encrypted_Flag))
    return p.decode()

def decryptKey(key):
    n = bytes_to_long(bytes.fromhex(key))
    key = long_to_bytes(root(n,e))
    return key.decode()

dropped_flag = decryptFlag(decryptKey(KEY), FLAG)

lista = []
for i in  range(0,len(dropped_flag),4):
    l = []
    for j in range(4):
        l.append(dropped_flag[i+j])
    lista.append(l)
flag=""
for x in lista:
    x = list(x)  
    x[0], x[len(x)-1] = x[len(x)-1], x[0]  
    flag += "".join(x) 
print(flag)
